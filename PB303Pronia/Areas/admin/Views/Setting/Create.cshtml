@model Setting
<div class="col-md-6 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <p class="card-description">
                Create Setting
            </p>
            <form method="post" class="forms-sample">
                <div class="text-danger" asp-validation-summary="ModelOnly"></div>

                <div class="form-group">
                    <label for="exampleInputUsername1">Key</label>
                    <input class="form-control" id="input1" asp-for="Key" name="Key" placeholder="Username">
                    <span asp-validation-for="Key" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="exampleInputEmail1">Value</label>
                    <input class="form-control" id="input2" name="Value" asp-for="Value" placeholder="Email">
                    <span asp-validation-for="Value" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary mr-2">Submit</button>
                <button class="btn btn-light">Cancel</button>
            </form>
        </div>
    </div>
</div>









<script type="importmap">
    {
        "imports": {
            "ckeditor5": "https://cdn.ckeditor.com/ckeditor5/43.1.1/ckeditor5.js",
            "ckeditor5/": "https://cdn.ckeditor.com/ckeditor5/43.1.1/"
        }
    }
</script>
<script type="module">
    import { ClassicEditor, Essentials, Paragraph, Bold, Italic, Font } from 'ckeditor5';

    let keyEditor, valueEditor;

    const editorConfig = {
        plugins: [Essentials, Paragraph, Bold, Italic, Font],
        toolbar: [
            'undo', 'redo', '|', 'bold', 'italic', '|',
            'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor'
        ]
    };

    ClassicEditor
        .create(document.querySelector('#input1'), editorConfig)
        .then(editor => {
            keyEditor = editor;
        })
        .catch(error => {
            console.error(error);
        });

    ClassicEditor
        .create(document.querySelector('#input2'), editorConfig)
        .then(editor => {
            valueEditor = editor;
        })
        .catch(error => {
            console.error(error);
        });

    // Sync CKEditor data with form before submission
    document.getElementById('settingsForm').addEventListener('submit', (event) => {
        // Update the form fields with editor data
        document.querySelector('#input1').value = keyEditor.getData();
        document.querySelector('#input2').value = valueEditor.getData();
    });
</script>
@* 
    <script src="~/ckeditor5-builder-43.1.1/main.js"></script>


<script>
    ClassicEditor
        .create(document.querySelector('#input1'), {})
        .then(editor => {
            window.editor = editor;
        })
        .catch(err => {
            console.error(err.stack)
        })
            
</script> *@